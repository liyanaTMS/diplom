import os

import psycopg2
import pytest
from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
# from webdriver_manager.chrome import ChromeDriverManager # Comment for docker

@pytest.fixture
def driver():
    options = Options()
    options.add_argument("--start-maximized")
    service = Service(ChromeDriverManager(driver_version="134.0.6998.89").install())
    config_driver = webdriver.Chrome(service=service, options=options)
    yield config_driver
    config_driver.quit()


DB_PARAMS = {
    'dbname': os.environ.get('POSTGRES_DB', 'taskmanager'),
    'user': os.environ.get('POSTGRES_USER', 'postgres'),
    'password': os.environ.get('POSTGRES_PASSWORD', 'postgres'),
    'host': os.environ.get('POSTGRES_HOST', 'localhost'),
    'port': os.environ.get('POSTGRES_PORT', '5432')
}
@pytest.fixture(scope="function")
def db_connection():
    """–§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î"""
    print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...")
    conn = psycopg2.connect(**DB_PARAMS)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
    yield conn  # –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç
    #cursor = conn.cursor()
    cur = conn.cursor()
    sql_delete = 'DELETE FROM "task"'
    cur.execute(sql_delete)
    sql_delete =  """DELETE FROM "user" WHERE username != 'test1'"""
    cur.execute(sql_delete)
    # –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    conn.commit()

    # –£–∑–Ω–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ
    rows_deleted = cur.rowcount
    print(f"–£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫: {rows_deleted}")
    # print(f"üîç –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {valid_user_payload['username']} –∏–∑ –ë–î...")
    # cursor.execute('DELETE FROM "user" WHERE username = %s', (valid_user_payload["username"],))
    # conn.commit()
    # print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –£–î–ê–õ–ï–ù–ò–Ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î...")
    # cursor.execute('SELECT username, password FROM "user" WHERE username = %s', (valid_user_payload["username"],))
    # del_user = cursor.fetchone()
    # cursor.close()
    # assert del_user is None, f" ‚ùå –£–¥–∞–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –ë–î: ID {valid_user_payload['username']}"
    # print(f"‚úÖ –£–¥–∞–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {valid_user_payload['username']} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î! ")

    conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
    print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ.")


# Fixture for docker
# @pytest.fixture
# def driver():
#     options = Options()
#     options.add_argument("--no-sandbox")
#     options.add_argument("--disable-dev-shm-usage")
#     options.add_argument("--headless")
#     options.binary_location = '/usr/bin/google-chrome-stable'
#
#     # –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ ChromeDriver –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
#     service = Service('/usr/local/bin/chromedriver')
#     driver = webdriver.Chrome(service=service, options=options)
#     driver.maximize_window()
#     yield driver
#     driver.quit()