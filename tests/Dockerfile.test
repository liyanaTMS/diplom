FROM --platform=linux/amd64 python:3.9-slim

WORKDIR /app
ENV PYTHONPATH=/app

# Установка системных зависимостей
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        openjdk-17-jre-headless \
        wget \
        curl \
        gnupg \
        ca-certificates \
        unzip \
        xvfb \
        xauth \
        fonts-liberation \
        libappindicator3-1 \
        libasound2 \
        libatk-bridge2.0-0 \
        libatk1.0-0 \
        libc6 \
        libcairo2 \
        libcups2 \
        libdbus-1-3 \
        libexpat1 \
        libfontconfig1 \
        libgbm1 \
        libgcc1 \
        libglib2.0-0 \
        libgtk-3-0 \
        libnspr4 \
        libnss3 \
        libpango-1.0-0 \
        libpangocairo-1.0-0 \
        libstdc++6 \
        libx11-6 \
        libx11-xcb1 \
        libxcb1 \
        libxcomposite1 \
        libxcursor1 \
        libxdamage1 \
        libxext6 \
        libxfixes3 \
        libxi6 \
        libxrandr2 \
        libxrender1 \
        libxss1 \
        libxtst6 \
        lsb-release \
        xdg-utils && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Установка Chrome (используем стабильный метод для amd64)
RUN mkdir -p /etc/apt/keyrings && \
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /etc/apt/keyrings/google.gpg && \
    echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/google.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/google-chrome.list && \
    dpkg --add-architecture amd64 && \
    apt-get update && \
    apt-get install -y --no-install-recommends google-chrome-stable:amd64 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Установка ChromeDriver, соответствующего установленной версии Chrome
RUN apt-get update && apt-get install -y jq && \
    CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d. -f1) && \
    CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/latest-versions-per-milestone.json" | jq -r ".milestones.\"${CHROME_VERSION}\".version") && \
    wget -q "https://storage.googleapis.com/chrome-for-testing-public/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip" && \
    unzip chromedriver-linux64.zip -d /tmp && \
    mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/ && \
    rm -rf chromedriver-linux64.zip /tmp/chromedriver-linux64 && \
    chmod +x /usr/local/bin/chromedriver && \
    apt-get remove -y jq && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Установка основных зависимостей Python
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Установка зависимостей для тестирования
COPY tests/requirements.txt ./tests/
RUN pip install --no-cache-dir -r tests/requirements.txt && \
    pip install --no-cache-dir pytest-xvfb

# Установка Allure Commandline
RUN wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.33.0/allure-commandline-2.33.0.zip && \
    unzip allure-commandline-2.33.0.zip -d /opt/allure && \
    ln -s /opt/allure/allure-2.33.0/bin/allure /usr/local/bin/allure && \
    rm allure-commandline-2.33.0.zip

# Копирование исходного кода и тестов
COPY . .

# Установка netcat для проверки доступности сервисов
RUN apt-get update && \
    apt-get install -y netcat-openbsd && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Переменные окружения для тестов
ENV DATABASE_URL=postgresql://postgres:postgres@db:5432/taskmanager
ENV TEST_DATABASE_URL=postgresql://postgres:postgres@db:5432/taskmanager_test
ENV TEST_PATH=tests/test_db_connection.py
ENV TEST_ARGS=""

# Настройка переменных окружения для Selenium с Chrome
ENV PYTHONUNBUFFERED=1
ENV DISPLAY=:99
ENV CHROME_BIN=/usr/bin/google-chrome
ENV CHROME_PATH=/usr/bin/google-chrome
ENV SELENIUM_HEADLESS=1

# Запуск тестов с помощью pytest
CMD xvfb-run --server-args="-screen 0 1920x1080x24" pytest ${TEST_PATH} -v -s ${TEST_ARGS}